name: Build and Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Check code format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  build:
    name: Build on ${{ matrix.os }}
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            target: x86_64-unknown-linux-gnu
            binary_extension: ""
          - os: ubuntu-latest
            platform: linux
            target: aarch64-unknown-linux-gnu
            binary_extension: ""

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}

      - name: Create package
        run: |
          PKG_NAME="db-backup-cli-${{ github.ref_name }}-${{ matrix.platform }}-$(echo ${{ matrix.target }} | cut -d'-' -f1)"
          mkdir -p "$PKG_NAME"
          cp "target/${{ matrix.target }}/release/db-backup-cli${{ matrix.binary_extension }}" "$PKG_NAME/"
          cp LICENSE README.md "$PKG_NAME/"
          tar czf "$PKG_NAME.tar.gz" "$PKG_NAME"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: db-backup-cli-${{ matrix.platform }}-${{ matrix.target }}
          path: db-backup-cli-${{ github.ref_name }}-${{ matrix.platform }}-*.tar.gz

  release:
    name: Create Release
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: List artifacts
        run: find . -type f -name "*.tar.gz" | sort

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ./**/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
