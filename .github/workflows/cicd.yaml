name: Rust CI

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: vprs3bkp

jobs:
  build:
    strategy:
      matrix:
        include:
          # Linux x86_64 targets
          - os: ubuntu-latest
            rust-version: stable
            target: x86_64-unknown-linux-gnu
            artifact-name: linux-x86_64

          # Debian x86_64 targets
          - os: debian-latest
            rust-version: stable
            target: x86_64-unknown-linux-gnu
            artifact-name: debian-x86_64

          # macOS Silicon (ARM64) targets
          - os: macos-latest
            rust-version: stable
            target: aarch64-apple-darwin
            artifact-name: macos-silicon

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Build Release
        run: cargo build --target ${{ matrix.target }} --release --verbose

      - name: Prepare Artifact
        run: |
          mkdir -p artifacts
          cp target/${{ matrix.target }}/release/${{ env.BINARY_NAME }} artifacts/${{ matrix.artifact-name }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: artifacts/${{ matrix.artifact-name }}
          retention-days: 7

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/linux-x86_64
            artifacts/debian-x86_64
            artifacts/macos-silicon
          generate_release_notes: true
          draft: false
          prerelease: false
