name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation dependencies
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.target != 'x86_64-unknown-linux-gnu' }}
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          ARCH=$(echo ${{ matrix.target }} | cut -d'-' -f1)
          PKG_NAME="db-backup-cli-${VERSION}-linux-${ARCH}"

          # Create package directory
          mkdir -p "${PKG_NAME}"

          # Copy binary, license and readme
          cp "target/${{ matrix.target }}/release/db-backup-cli" "${PKG_NAME}/"
          cp README.md LICENSE "${PKG_NAME}/" || true

          # Create archive
          tar -czf "${PKG_NAME}.tar.gz" "${PKG_NAME}"

          # Output the filename for the upload step
          echo "ASSET_PATH=${PKG_NAME}.tar.gz" >> $GITHUB_ENV
          echo "ASSET_NAME=${PKG_NAME}.tar.gz" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET_PATH }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
